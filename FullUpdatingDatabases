import sqlite3
conn = sqlite3.connect("computer_cards.db")

def create(name, cores, cpu_speed, ram, cost):
	insert_sql = "INSERT INTO computer(name, cores, cpu_speed, ram, cost) VALUES ('{}', '{}', '{}', '{}', '{}')".format(name,cores,cpu_speed,ram,cost)
	
	conn.execute(insert_sql)
	
	conn.commit()
	
def read(name):
    # select all entries from computer table where name is 'whatever's in the name variable'.
	select_sql = "SELECT * from computer WHERE name = '{}'".format(name)
	result = conn.execute(select_sql) # execute this search
	
    # use .fetchone method (as opposed to .fetchall to fetch only one entry.
	return result.fetchone()

def update(cores, cpu_speed, ram, cost, name):
	update_sql = "UPDATE computer SET cores = {}, cpu_speed = {}, ram = {}, cost = {} WHERE name = '{}'".format(cores,cpu_speed,ram,cost,name)
	
	conn.execute(update_sql)
	
	conn.commit()
	
	
def delete(name):
	delete_sql = "DELETE FROM computer WHERE name = '{}'".format(name)
	
	conn.execute(delete_sql)
	
	conn.commit()
		

command = input("Do you want to create, read, update or delete a card? ")

if command == "create":
	name = input("Name > ")
	cores = input("Cores > ")
	cpu_speed = input("CPU speed (GHz) > ")
	ram = input("RAM (MB) > ")
	cost = input("Cost ($) > ")

	create(name, cores, cpu_speed, ram, cost)
	
	print("Your card has been created")

elif command == "read":
	
    name = input("Enter the name of the card that you want to read. > ")
    card = read(name)
    print(card)


elif command == "update":
	name = input("Enter the name of the card that you want to update > ")
	cores = input("Cores > ")
	cpu_speed = input("CPU speed (GHz) > ")
	ram = input("RAM (MB) > ")
	cost = input("Cost ($) > ")
	
	update(cores, cpu_speed, ram, cost, name)
	
	print("Your card has been updated")
	
elif command == "delete":
	name = input("Enter the name of the card that you want to delete. > ")
	
	delete(name)
	
	print("Your card has been deleted.")
	
	
conn.close()
